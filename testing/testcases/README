bbsplit.bin:
    * do/while loop to test BB splitting
      i = 0; do { nop(); } while (++i < 10);
    * entry point: 0x0

callchain.bin:
    * chain of 6 function calls with returns
    * entry point: 0x2D

callhierarchy.bin:
    * two functions, where one is called from different
      levels of the call hierarchy. tests proper coloring
      of the return nodes.
    * entry point: 0x19

callret.bin: 
    * function call / return test case
    * entry point: 0x5

hello.bin:
    * statically linked ELF binary simply calling printf("hello world");
    * main entry point: 0x8048254

loop.bin:
    * basic for loop:
      for (i = 0; i < 10; ++i)
      { nop(); }
    * entry point: 0x0

loopif.bin:
    * loop with an if/else construct:
        do {
          if (i % 2 == 0) {
            asm volatile ("nop");
          } else {
            j++;
          }
        } while (++i < 10);
    * entry point: 0x0

loopcall.bin
    * loop with an if branch that calls a function with
      different arguments
    * entry point: 0x5

manycalls.bin
    * call chain: a -> b -> 3x c
    * verify: c returns to b returns to a

payload.bin:
    * Julian's buffer overflow shellcode from DOS
    * entry point: 0x0

recursion.bin:
    * call into a recursive function
    * entry point: 0x1D

sum_rec.bin:
    * ELF binary recursively counting numbers
    * entry point: 0x8048400

twocalls.bin:
    * two calls to the same function from different
      sources
    * entry point: 0x5
